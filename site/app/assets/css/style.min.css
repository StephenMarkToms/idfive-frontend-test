/*!
 * 
 * 
 * 
 * @author 
 * @version 1.0.0
 * Copyright 2019.  licensed.
 */
.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}body{color:#000;font-family:proxima_novaregular}body,html{min-height:100vh}button{-webkit-appearance:none;-moz-appearance:none}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}nav{padding:2em;position:absolute;display:-ms-flexbox;display:flex;width:100%;-ms-flex-pack:justify;justify-content:space-between}nav .logo{width:150px}nav #menu-btn{font-size:1.3em;margin-top:auto;margin-bottom:auto;text-decoration:none;color:#fff;font-family:proxima_novabold;display:-ms-flexbox;display:flex}nav #menu-btn svg{max-height:3em;min-width:27px;padding-left:10px}.header{display:-ms-flexbox;display:flex;padding:2em;height:100vh;background-color:#6638b6;background-image:url(/assets/img/hero.jpg);background-size:433%;background-position:0 21%;background-repeat:no-repeat}.header #content{margin-top:auto;margin-bottom:auto}.header h1{font-family:proxima_novabold;color:#fff}.cta-btn{color:#fff;font-size:1.5em;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:6px solid #fff;background-color:transparent;padding:15px 20px;min-width:230px}.callout-block h2{font-family:proxima_novalight;font-size:1.8em;line-height:1.7em;padding:3em 2em;text-align:center}.action-block{background-color:#6638b6;padding:10em 2em;text-align:center}.action-block p{color:#fff;font-size:1.2em;margin-bottom:3.5em}.img-tile{width:100%;min-height:300px;background-position:50%;background-size:cover}.copy-tile h2{font-family:proxima_novalight;font-size:1.8em;line-height:1.7em;padding:1em 2em;text-align:center}.stat-block{position:relative}.stat-block .stat-icon{background-color:#6638b6;width:100px;height:100px;padding:1em;display:-ms-flexbox;display:flex;border-radius:50px;position:absolute;top:-50px;left:50%;transform:translateX(-50%)}.stat-block .stat-icon svg{margin:auto}.stat-block .stat-image{width:300px;height:290px;margin-left:auto;margin-right:auto;background-position:50%;background-size:cover}.stat-block p{text-align:center;font-weight:700;font-family:proxima_novablack;font-size:1.2em}@font-face{font-family:proxima_novablack;src:url(../fonts/proxima-nova-black-webfont.woff2) format("woff2"),url(../fonts/proxima-nova-black-webfont.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:proxima_novabold;src:url(../fonts/proxima-nova-bold-webfont.woff2) format("woff2"),url(../fonts/proxima-nova-bold-webfont.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:proxima_novalight;src:url(../fonts/proxima-nova-light-webfont.woff2) format("woff2"),url(../fonts/proxima-nova-light-webfont.woff) format("woff");font-weight:400;font-style:normal}@font-face{font-family:proxima_novaregular;src:url(../fonts/proxima-nova-regular-webfont.woff2) format("woff2"),url(../fonts/proxima-nova-regular-webfont.woff) format("woff");font-weight:400;font-style:normal}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media only screen and (min-width:768px){.header{background-position:50%}}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}h1{margin:0;font-size:3em!important}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
